### CapsuleX API Test Cases
### Base URL for local development
@baseUrl = http://localhost:3001
@authToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiODZlYmU3ODUtOGI2Ni00YTBmLThkMzQtZjM4MzExZGUzZDU5Iiwid2FsbGV0X2FkZHJlc3MiOiI5V3pEWHdCYm1rZzhaVGJOTXFVeHZRUkF5clp6RHNHWWRMVkw5ell0QVdXTSIsImF1dGhfdHlwZSI6InByaXZ5IiwiaWF0IjoxNzUyNTU1Mjc3LCJleHAiOjE3NTMxNjAwNzd9.3Xz59y8b-plxwzFj7O1qXKASEEg2noksZv5bx6PJdrk

### ========================================
### AUTHENTICATION - Get JWT Token First!
### ========================================

### 1. Authenticate with Wallet (creates user if doesn't exist)
POST {{baseUrl}}/api/users/auth
Content-Type: application/json

{
  "wallet_address": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM",
  "auth_type": "wallet"
}

### 2. Authenticate with Privy (creates user if doesn't exist)
POST {{baseUrl}}/api/users/auth
Content-Type: application/json

{
  "wallet_address": "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM",
  "auth_type": "privy",
  "privy_user_id": "privy_user_123456",
  "email": "user@example.com",
  "name": "John Doe"
}

### 3. Get User Profile (no auth required)
GET {{baseUrl}}/api/users/profile/9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM

### ========================================
### COPY THE TOKEN FROM AUTH RESPONSE ABOVE
### Replace @authToken value with the token from the auth response
### ========================================

### ========================================
### Authentication Tests
### ========================================

### 1. Create Capsule (requires authentication)
POST {{baseUrl}}/api/from "@solana/kit";
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "content_encrypted": "U2FsdGVkX1+vupppZksvRf5pq5g5XjFRIipRkwB0K1Y96Qsv2Lm+31cmzaAILwytX0sosZQ==",
  "content_hash": "a1b2c3d4e5f67890123456789012345678901234567890abcdefabcdefabcdef",
  "has_media": false,
  "media_urls": [],
  "reveal_date": "2025-12-31T23:59:59Z",
  "on_chain_tx": "5K3iXLBynJZJ5rE5NAfWvGj4VAQrK8fVHYShTtkvCwFbmEuo7kLpiR3pBQ7GHo3twamzBvvtEWDbknvEEGuw6FAW",
  "sol_fee_amount": 0.00005
}

### 2. Create Capsule with Media
POST {{baseUrl}}/api/capsules/create
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "content_encrypted": "U2FsdGVkX1+vupppZksvRf5pq5g5XjFRIipRkwB0K1Y96Qsv2Lm+31cmzaAILwytX0sosZQ==",
  "content_hash": "b2c3d4e5f67890123456789012345678901234567890abcdefabcdefabcdef12",
  "has_media": true,
  "media_urls": [
    "https://ipfs.io/ipfs/QmYwAPJzv5CZsnA625s3Xf2nemtYgPpHdWEz79ojWnPbdG",
    "https://ipfs.io/ipfs/QmYwAPJzv5CZsnA625s3Xf2nemtYgPpHdWEz79ojWnPbdH"
  ],
  "reveal_date": "2024-12-31T23:59:59Z",
  "on_chain_tx": "5K3iXLBynJZJ5rE5NAfWvGj4VAQrK8fVHYShTtkvCwFbmEuo7kLpiR3pBQ7GHo3twamzBvvtEWDbknvEEGuw6FAW",
  "sol_fee_amount": 0.00005
}

### ========================================
### Error Cases - Create Capsule
### ========================================

### 3. Create Capsule - Missing Required Fields
POST {{baseUrl}}/api/capsules/create
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "content_encrypted": "U2FsdGVkX1+vupppZksvRf5pq5g5XjFRIipRkwB0K1Y96Qsv2Lm+31cmzaAILwytX0sosZQ==",
  "has_media": false
}

### 4. Create Capsule - Invalid Reveal Date (Past)
POST {{baseUrl}}/api/capsules/create
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "content_encrypted": "U2FsdGVkX1+vupppZksvRf5pq5g5XjFRIipRkwB0K1Y96Qsv2Lm+31cmzaAILwytX0sosZQ==",
  "content_hash": "a1b2c3d4e5f67890123456789012345678901234567890abcdefabcdefabcdef",
  "has_media": false,
  "media_urls": [],
  "reveal_date": "2020-01-01T00:00:00Z",
  "on_chain_tx": "5K3iXLBynJZJ5rE5NAfWvGj4VAQrK8fVHYShTtkvCwFbmEuo7kLpiR3pBQ7GHo3twamzBvvtEWDbknvEEGuw6FAW",
  "sol_fee_amount": 0.00005
}

### 5. Create Capsule - No Authentication
POST {{baseUrl}}/api/capsules/create
Content-Type: application/json

{
  "content_encrypted": "U2FsdGVkX1+vupppZksvRf5pq5g5XjFRIipRkwB0K1Y96Qsv2Lm+31cmzaAILwytX0sosZQ==",
  "content_hash": "a1b2c3d4e5f67890123456789012345678901234567890abcdefabcdefabcdef",
  "has_media": false,
  "media_urls": [],
  "reveal_date": "2024-12-31T23:59:59Z",
  "on_chain_tx": "5K3iXLBynJZJ5rE5NAfWvGj4VAQrK8fVHYShTtkvCwFbmEuo7kLpiR3pBQ7GHo3twamzBvvtEWDbknvEEGuw6FAW",
  "sol_fee_amount": 0.00005
}

### ========================================
### Get User's Capsules
### ========================================

### 6. Get My Capsules (requires authentication)
GET {{baseUrl}}/api/capsules/my-capsules
Authorization: Bearer {{authToken}}

### 7. Get My Capsules - No Authentication
GET {{baseUrl}}/api/capsules/my-capsules

### ========================================
### Get Revealed Capsules (Public)
### ========================================

### 8. Get Revealed Capsules (default limit)
GET {{baseUrl}}/api/capsules/revealed

### 9. Get Revealed Capsules with Custom Limit
GET {{baseUrl}}/api/capsules/revealed?limit=10

### 10. Get Revealed Capsules with Large Limit
GET {{baseUrl}}/api/capsules/revealed?limit=100

### ========================================
### Update Capsule Status
### ========================================

### 11. Update Capsule Status - Mark as Revealed
PATCH {{baseUrl}}/api/capsules/CAPSULE_ID_HERE/status
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "status": "revealed",
  "revealed_at": "2024-01-15T12:00:00Z"
}

### 12. Update Capsule Status - Mark as Posted to Social
PATCH {{baseUrl}}/api/capsules/CAPSULE_ID_HERE/status
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "status": "posted",
  "social_post_id": "twitter_post_123456",
  "posted_to_social": true
}

### 13. Update Capsule Status - Complex Update
PATCH {{baseUrl}}/api/capsules/CAPSULE_ID_HERE/status
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "status": "revealed",
  "revealed_at": "2024-01-15T12:00:00Z",
  "social_post_id": "twitter_post_789012",
  "posted_to_social": true
}

### ========================================
### Error Cases - Update Status
### ========================================

### 14. Update Capsule Status - Missing Status
PATCH {{baseUrl}}/api/capsules/CAPSULE_ID_HERE/status
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "revealed_at": "2024-01-15T12:00:00Z"
}

### 15. Update Capsule Status - Invalid Capsule ID
PATCH {{baseUrl}}/api/capsules/invalid-capsule-id/status
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "status": "revealed",
  "revealed_at": "2024-01-15T12:00:00Z"
}

### 16. Update Capsule Status - No Authentication
PATCH {{baseUrl}}/api/capsules/CAPSULE_ID_HERE/status
Content-Type: application/json

{
  "status": "revealed",
  "revealed_at": "2024-01-15T12:00:00Z"
}

### ========================================
### Test Scenarios with Real Data
### ========================================

### 17. Create Time Capsule for New Year's Resolution
POST {{baseUrl}}/api/capsules/create
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "content_encrypted": "U2FsdGVkX1+NewYearResolution2024EncryptedContent==",
  "content_hash": "c3d4e5f67890123456789012345678901234567890abcdefabcdefabcdef1234",
  "has_media": false,
  "media_urls": [],
  "reveal_date": "2025-01-01T00:00:00Z",
  "on_chain_tx": "NewYearResolutionTxHash123456789",
  "sol_fee_amount": 0.00005
}

### 18. Create Anniversary Capsule with Photos
POST {{baseUrl}}/api/capsules/create
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "content_encrypted": "U2FsdGVkX1+AnniversaryMemoriesEncryptedContent==",
  "content_hash": "d4e5f67890123456789012345678901234567890abcdefabcdefabcdef12345",
  "has_media": true,
  "media_urls": [
    "https://ipfs.io/ipfs/QmAnniversaryPhoto1",
    "https://ipfs.io/ipfs/QmAnniversaryPhoto2",
    "https://ipfs.io/ipfs/QmAnniversaryVideo1"
  ],
  "reveal_date": "2025-06-15T18:00:00Z",
  "on_chain_tx": "AnniversaryTxHash789012345",
  "sol_fee_amount": 0.00005
}

### ========================================
### Notes for Testing
### ========================================

# Before running these tests:
# 1. Replace {{authToken}} with a valid JWT token
# 2. Replace CAPSULE_ID_HERE with actual capsule IDs from your database
# 3. Make sure your local server is running on port 3000
# 4. Ensure your database is set up and accessible
# 5. Check that the authentication middleware is working

# Expected Response Formats:
# Success: { "success": true, "data": {...} }
# Error: { "success": false, "error": "Error message" }

# Common Status Codes:
# 200 - Success (GET, PATCH)
# 201 - Created (POST)
# 400 - Bad Request (validation errors)
# 401 - Unauthorized (missing/invalid token)
# 404 - Not Found (capsule not found)
# 500 - Internal Server Error
